{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"mMA4BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAevC,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAIlB,SACI,uBAAOO,KAAK,OACRC,MAAOT,EACPU,SAfc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCJlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCQLO,EAVK,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE7B,OACE,sBAAKc,UAAU,6CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCsBKO,EAtBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECJN,SAACA,GAAY,IAAD,EAEVd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAqBpC,OAbAC,qBAAW,WACPxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEnBH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAKlB,CAACpB,IAGIqB,EDd2BK,CAAa1B,GAAjCa,EAHgB,EAGtBN,KAAca,EAHQ,EAGRA,QAEtB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,4CACZ,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEMtBgB,EAtBM,WAAO,IAAD,EAEazC,mBAAS,CAAC,gBAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,gCACI,4CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAAAoB,GAAS,OACpB,cAAC,EAAD,CAAS7B,SAAU6B,GACbA,Y,MCX9BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3ceca350.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategorias }) => {\r\n    // estado del input\r\n    const [inputValue, setInputValue] = useState('');\r\n    // cambia el estado del input\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    // llama a setCategorias que viene de las propsm (agrega nuevas categorias)\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 1) {\r\n            setCategorias(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddCategory;\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\n\r\nexport const getGifs = async (category)=>{\r\n    // encodeURI sirve para escapar los espacios\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=MM0M9lYloqE3RRP3KlVTt4SwF7EhAKLo`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInLeft\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GifGridItem;\r\n","\r\n\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport GifGridItem from './GifGridItem.jsx';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    // estado de las imagenes (llama al custom hook useFetchGifs)\r\n    const { data: images, loading } = useFetchGifs(category); // useFetch retorne {data, loading} que se desestructuran\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    // use effect se ejecuta cada ves que cambia category que es su dependencia, entonces vuelve a renderizar el componente\r\n    useEffect( ()=>{\r\n        getGifs(category).then(imgs=>{\r\n    \r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            })\r\n \r\n        })\r\n\r\n    },[category]) // [category] es la dependencia del hook\r\n\r\n\r\n    return state; // {data:[], loading:true}\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['Dragon Ball']);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif Expert</h2>\r\n            <AddCategory setCategorias={setCategorias}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => \r\n                        <GifGrid category={categoria}\r\n                         key={categoria}\r\n                         />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}